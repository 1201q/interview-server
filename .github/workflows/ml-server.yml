name: ml-server

on:
  push:
    branches: ["main"]
    paths:
      - "ml-server/**"

jobs:
  build-and-push-ml:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push ML Image
        uses: docker/build-push-action@v5
        with:
          context: ./ml-server
          file: ./ml-server/Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ml-server:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ml-server:arm64
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ml-server:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ml-server:cache,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-ml

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose.yml, nginx.conf"
          target: /home/ubuntu/interview
          overwrite: true
          debug: true

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /home/ubuntu/interview
            echo "PY_TEST=${{ secrets.PY_TEST }}" >> .env

            docker-compose down --remove-orphans
            docker system prune -af
            docker-compose pull ml-server
            docker-compose up -d --build ml-server
