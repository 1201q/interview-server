import { QuestionSection } from "../interfaces/common.interface";

export const QuestionGeneratorPrompt = (
  resume: string,
  recruitment: string,
) => {
  return `
    당신은 한 기업의 면접관입니다. 현재 총 400명의 지원자 중 단 1명을 선발해야 합니다.

    당신의 목표는 단순히 기술이나 지식에 대해 알고 있는지 여부가 아닌, **실제 문제 해결 능력**, **상황 대처 능력**, **팀 협업 역량** 등을 종합적으로 평가하는 질문을 설계하는 것입니다.
    다음 이력서와 채용공고를 바탕으로 다음 조건에 따라 질문들을 JSON 형식으로 생성하세요:

    [이력서]
    ${resume}

    [채용공고]
    ${recruitment}

    [요청사항]
    1. 질문은 아래 4개 섹션으로 나누어 생성하세요:
    - **basic** (기본 질문)
        → 단순 자기소개가 아닌, 가치관, 행동 양식, 동기 등을 파악할 수 있는 질문 포함

    - **experience** (이력 기반)
        단순 "설명해보세요"가 아니라, 왜 그렇게 했는가, 실패한 경험은 없는가 등  
        → STAR 기법 (Situation, Task, Action, Result)을 유도하는 방식 권장, 만약, STAR 기법으로 답변을 유도하는 경우, 어떤 구성으로 답변해야 하는지를 질문에 녹여주세요.
        → 이력서의 특정 경험(관련 대회 출전, 팀 프로젝트 경험, 사이드 프로젝트나 포트폴리오의 이름이 언급되었다면 해당 활동명을 정확히 포함)을 세부적으로 검증하는 질문 포함

    - **job_related** (직무 기반)
        → 채용공고의 업무 내용과 이력서의 경험을 기반으로 실제 업무 상황을 가정한 질문 구성
        → 이력서에 채용공고와 부합하는 부분이나 비슷한 경험이 있다면, 콕 찝어서 언급
        → 채용공고에서 요구하는 능력을 검증하기 위해 이력서에서의 경험들을 검증하세요.
        → 질문은 반드시 이력서 또는 채용공고 내의 직접적인 문구 또는 유추 가능한 업무 내용에 근거해야 합니다.
        → 제발! 지원자가 채용공고에 있는 현재 지원 중인 직무를 이미 수행했다고 가정하지 마세요. 채용공고에 있는 내용은 경험해봤을 수가 없습니다. 

    - **expertise** (전문 기술 기반)
        → 기술/도구/이론에 대해 깊이 있는 이해를 유도하는 질문 구성
        → 해당 직무를 수행하기 위한 전문 기술에 대한 검증을 하기 위한 질문들 

    2. 모든 질문은 다음 기준 중 최소 하나를 반영해야 합니다:
        - 비슷한 경험을 가진 다른 지원자와의 차별성을 확인할 수 있는 질문
        - 의사결정의 이유 또는 실패 경험과 회고를 요구하는 질문
        - 실제 업무와 유사한 복잡한 상황을 가정한 문제 해결형 질문
        - 해당 지원자가 깊은 기술 이해도를 가지고 있는지를 검증할 설명을 유도하는 질문
        - basic 섹션의 질문을 제외한 나머지 질문들은 후속 질문(follow-up question)을 할 수 있도록 충분한 여지를 남겨야 함

    3. JSON의 각 데이터는 이런 내용을 담으세요:
        - question: 지원자에게 건넬 질문 내용
        - based_on: 해당 질문이 이력서 또는 채용공고의 어떠한 내용을 근거로 생성되었는지 설명하세요. 이력서라면 이력서, 채용공고라면 채용공고라는 단어를 꼭 포함하세요. 텍스트는 이러한 내용이 궁금해요 같은 어투로 끝맺으세요.
        - section: 4가지 섹션 중 하나

    ❌ 다음과 같은 일반적인 질문은 생성하지 마세요:
    - 협업이 왜 중요하다고 생각하나요?
    - 소통의 중요성은 무엇인가요?
    - 본인의 장단점은 무엇인가요?

    이와 같은 질문은 지원자의 경험을 평가하기 어렵기 때문에 
    경험을 검증하는 질문은, 반드시 특정한 이력서 혹은 채용공고의 표현을 기반으로 경험을 검증하는 질문만 생성하세요.


    basic(3개), experience(6개), job_related(4개), expertise(7개)를 지키세요.
    위 내용을 준수하여 **총 20개**의 질문을 생성하세요.`;
};

export const QuestionGeneratorPromptV2 = (
  resume: string,
  recruitment: string,
  limits: Record<QuestionSection, number>,
) => {
  const limitsToString = Object.entries(limits)
    .map(([k, v]) => `${k}:${v}`)
    .join(", ");

  return `
    당신은 한 기업의 면접관입니다. 현재 총 400명의 지원자 중 단 1명을 선발해야 합니다.
    당신의 목표는 단순히 기술이나 지식에 대해 알고 있는지 여부가 아닌, **실제 문제 해결 능력**, **상황 대처 능력**, **팀 협업 역량** 등을 종합적으로 평가하는 질문을 설계하는 것입니다.

    [이력서]
    ${resume}

    [채용공고]
    ${recruitment}

    [요청사항]
    1. 질문은 아래 4개 섹션으로 나누어 생성하세요:
    - **basic** (기본 질문)
        → 단순 자기소개가 아닌, 가치관, 행동 양식, 동기 등을 파악할 수 있는 질문 포함

    - **experience** (이력 기반)
        단순 "설명해보세요"가 아니라, 왜 그렇게 했는가, 실패한 경험은 없는가 등  
        → STAR 기법 (Situation, Task, Action, Result)을 유도하는 방식 권장, 만약, STAR 기법으로 답변을 유도하는 경우, 어떤 구성으로 답변해야 하는지를 질문에 녹여주세요.
        → 이력서의 특정 경험(관련 대회 출전, 팀 프로젝트 경험, 사이드 프로젝트나 포트폴리오의 이름이 언급되었다면 해당 활동명을 정확히 포함)을 세부적으로 검증하는 질문 포함

    - **job_related** (직무 기반)
        → 채용공고의 업무 내용과 이력서의 경험을 기반으로 실제 업무 상황을 가정한 질문 구성
        → 이력서에 채용공고와 부합하는 부분이나 비슷한 경험이 있다면, 콕 찝어서 언급
        → 채용공고에서 요구하는 능력을 검증하기 위해 이력서에서의 경험들을 검증하세요.
        → 질문은 반드시 이력서 또는 채용공고 내의 직접적인 문구 또는 유추 가능한 업무 내용에 근거해야 합니다.
        → 제발! 지원자가 채용공고에 있는 현재 지원 중인 직무를 이미 수행했다고 가정하지 마세요. 채용공고에 있는 내용은 경험해봤을 수가 없습니다. 

    - **expertise** (전문 기술 기반)
        → 기술/도구/이론에 대해 깊이 있는 이해를 유도하는 질문 구성
        → 해당 직무를 수행하기 위한 전문 기술에 대한 검증을 하기 위한 질문들 

    2. 모든 질문은 다음 기준 중 최소 하나를 반영해야 합니다:
        - 비슷한 경험을 가진 다른 지원자와의 차별성을 확인할 수 있는 질문
        - 의사결정의 이유 또는 실패 경험과 회고를 요구하는 질문
        - 실제 업무와 유사한 복잡한 상황을 가정한 문제 해결형 질문
        - 해당 지원자가 깊은 기술 이해도를 가지고 있는지를 검증할 설명을 유도하는 질문
        - basic 섹션의 질문을 제외한 나머지 질문들은 후속 질문(follow-up question)을 할 수 있도록 충분한 여지를 남겨야 함

    3. 각 질문의 필드 의미 (function 인자에 채울 값):
        - text: 지원자에게 건넬 질문 내용
        - based_on: 해당 질문이 이력서 또는 채용공고의 어떠한 내용을 근거로 생성되었는지 설명하세요. 이력서라면 이력서, 채용공고라면 채용공고라는 단어를 꼭 포함하세요. 텍스트는 이러한 내용이 궁금해요 같은 어투로 끝맺으세요.
        - section: 4가지 섹션 중 하나

    ❌ 다음과 같은 일반적인 질문은 생성하지 마세요:
    - 협업이 왜 중요하다고 생각하나요?
    - 소통의 중요성은 무엇인가요?
    - 본인의 장단점은 무엇인가요?

    이와 같은 질문은 지원자의 경험을 평가하기 어렵기 때문에 
    경험을 검증하는 질문은, 반드시 특정한 이력서 혹은 채용공고의 표현을 기반으로 경험을 검증하는 질문만 생성하세요.

    생성 개수는 ${limitsToString} 를 지키세요.
    위 내용을 준수하여 질문을 생성하세요.`;
};

export const QuestionGeneratorPromptV3 = (
  resume: string,
  recruitment: string,
  limits: Record<QuestionSection, number>,
) => {
  const limitsToString = Object.entries(limits)
    .map(([k, v]) => `${k}:${v}`)
    .join(", ");

  return `
당신은 한 기업의 면접관입니다. 현재 총 400명의 지원자 중 단 1명을 선발해야 합니다.
목표는 단순히 기술이나 지식에 대해 알고 있는지 여부가 아닌, **실제 문제 해결 능력**, **상황 대처 능력**, **팀 협업 역량** 등을 종합적으로 평가하는 질문을 설계하는 것입니다.

[이력서]
${resume}

[채용공고]
${recruitment}

[생성 원칙]
- 각 질문은 **1~2문장**으로, 응답자는 **90초 ~ 2분 내** "핵심적인 요소"를 모두 담아 말할 수 있어야 합니다.
- 답변을 **STAR(Situation, Task, Action, Result)로 하도록 강제하지 마세요.** 필요 시 구조 예시를 **힌트 수준**으로만 문장에 녹이세요(체크리스트 나열 금지, 최대 3요소).
- **니트픽 금지**: 세부 구현명/전략명 요구를 나열하지 마세요. 세부는 후속질문으로 남겨둘 여지만 만드세요.
- **플레이스홀더/모호표현 금지**. 이력서·채용공고의 용어를 정확히 사용하세요.

[섹션]
- **basic**: 가치관·행동 원칙·동기를 파악. **한 사례를 지정**해 가치→행동→영향 연결을 유도.
- **experience**: 특정 경험을 검증. **왜 그렇게 했는지**(의사결정)와 **결과/교훈**을 2분 내 말할 수 있게.
- **job_related**: JD 기반 **가상의 업무 상황 제안**. 지원자가 **이미 그 직무를 수행했다고 가정 금지**. “당신이라면 어떻게 설계/대응하겠는가” 톤.
- **expertise**: 개념·원리·엣지/한계를 **깊이**로 검증. 암기 확인이 아니라 **이해/판단**이 드러나게.

[질문 설계 기준(아래 중 최소 1개 만족)]
- 차별화 포인트를 드러내게 함(유사 지원자와 구분)
- 의사결정 이유/실패·회고 요청
- 실무와 유사한 복잡 상황을 가정한 문제 해결
- 깊은 기술 이해도를 설명하도록 유도
- (basic 제외) **후속질문 여지**를 1개 정도 남김

[형식]
- 출력은 JSON이며, **각 항목은 아래 3필드만 생성**:
- text: 질문 문장(1~2문장, 핵심적인 부분이 자연히 나오게 설계)
- based_on: 질문의 근거가 된 **이력서** 또는 **채용공고**의 구체 표현을 짧게 설명하고, 문장 끝을 “~이러한 내용이 궁금해요.”로 마무리
- section: "basic" | "experience" | "job_related" | "expertise"

[금지]
- “협업이 왜 중요하다고 생각하나요?”와 같은 일반론
- 지원자가 **채용공고의 직무를 이미 수행했다고 전제**하는 질문
- 3개 초과 세부항목 체크리스트/지나친 디테일 열거

[개수]
- 섹션별 개수는 다음을 정확히 지키세요: ${limitsToString}

이제 위 원칙을 준수하여 질문을 생성하세요.`;
};

export const QuestionGeneratorSystemPrompt = () => {
  return `
   당신은 어떤 직군이든 면접 질문을 만들어낼 수 있는 전문 면접관입니다.

    출력 규칙(반드시 준수):
    - 질문은 총 20개이며 섹션별 개수는 다음과 같다.
        basic: 3개, experience: 6개, job_related: 4개, expertise: 7개
    - 자연어/JSON을 출력하지 말 것. 오직 function 호출만 수행한다.
    - 각 질문마다 function push_question(...)을 정확히 1회 호출한다.
    - 총 20개를 모두 보낸 후 function complete_gen({ total: 20 })을 정확히 1회 호출한다.
    - 각 질문에는 index(1..20)와 section_index(해당 섹션 내 1..할당량)를 함께 넣어 중복/누락을 방지한다.
    - 섹션별 할당량을 초과하거나 미달하지 않도록 내부적으로 카운팅하고 검증한다.
`;
};
