events { }

http {    
    server {
        listen 80;
        server_name api.aiterview.tech;

        location ^~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
            default_type "text/plain";
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name api.aiterview.tech;

        ssl_certificate /etc/letsencrypt/live/api.aiterview.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.aiterview.tech/privkey.pem;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers HIGH:!aNULL:!MD5;

        client_max_body_size 50M;

        location / {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, PATCH, PUT' always; 
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;

            proxy_pass http://interview:8000;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
            proxy_http_version 1.1;

            ### sse 버퍼링 off
            proxy_buffering off;
        }

        location /ml/ {
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always; 
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type' always;

            proxy_pass http://ml-server:5000/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
